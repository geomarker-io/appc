[{"path":"http://geomarker.io/appc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 appc authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://geomarker.io/appc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cole Brokamp. Author, maintainer. Qing Duan. Author.","code":""},{"path":"http://geomarker.io/appc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brokamp C, Duan Q (2024). appc: Air Pollution Predictor Commons. R package version 0.1.0, http://geomarker.io/appc/, https://github.com/geomarker-io/appc.","code":"@Manual{,   title = {appc: Air Pollution Predictor Commons},   author = {Cole Brokamp and Qing Duan},   year = {2024},   note = {R package version 0.1.0, http://geomarker.io/appc/},   url = {https://github.com/geomarker-io/appc}, }"},{"path":[]},{"path":"http://geomarker.io/appc/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Air Pollution Predictor Commons","text":"goal {appc} package provide daily, high resolution, near real-time model-based ambient air pollution exposure assessments. achieved training generalized random forest several geomarkers predict daily average EPA AQS concentrations 2017 present. {appc} package contains functions generating geomarker predictors ambient air pollution concentrations. Source files included package create training dataset, train model, create cross-validation accuracy report. Installed geomarker data sources grf model hosted release assets GitHub, package can used quick geomarker assessment, including prediction ambient air pollution concentrations exact s2 locations specific dates.","code":"# show short example of air pollution exposure assessment"},{"path":"http://geomarker.io/appc/index.html","id":"s2-locations","dir":"","previous_headings":"About","what":"s2 locations","title":"Air Pollution Predictor Commons","text":"using s2 define location","code":""},{"path":"http://geomarker.io/appc/index.html","id":"describe-input-format-for-predict_pm25-and-show-example","dir":"","previous_headings":"About","what":"describe input format for predict_pm25 and show example","title":"Air Pollution Predictor Commons","text":"longer example convert start date end date list dates put tibble define new column pm25 pm25_se","code":""},{"path":"http://geomarker.io/appc/index.html","id":"exposure-assessment-model-details","dir":"","previous_headings":"About","what":"Exposure Assessment Model Details","title":"Air Pollution Predictor Commons","text":"Exact s2 location, contiguous United States Daily, 2017 - 2023 summarize predictors used add model statement overall accuracy?","code":""},{"path":"http://geomarker.io/appc/index.html","id":"geomarker-assessment","dir":"","previous_headings":"","what":"Geomarker assessment","title":"Air Pollution Predictor Commons","text":"Cover individual geomarker examples? vignette??","code":""},{"path":"http://geomarker.io/appc/index.html","id":"developing","dir":"","previous_headings":"","what":"Developing","title":"Air Pollution Predictor Commons","text":"create release geomarker data release assets, well create AQS training data, train, evaluate generalized random forest model, use just execute recipes justfile.","code":"> just --list  Available recipes:     model_refresh        # data > train > report     dl_geomarker_data    # download all geomarker ahead of time, if not already cached     make_training_data   # make training data     train                # train grf model     report               # create CV accuracy report     release_grf          # upload grf model to current github release     docker_test          # run tests without cached release files     docker_tool          # build docker image preloaded with {appc} and data     release_merra_data   # upload merra data to github release     release_nei_data     # install nei data from source and upload to github release     release_smoke_data   # install smoke data from source and upload to github release     release_traffic_data # install traffic data from source and upload to github release     release_urban_imperviousness_data # install nlcd urban imperviousness data from source and upload to github release"},{"path":"http://geomarker.io/appc/reference/contiguous_us.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the geography of the 2020 contiguous United States — contiguous_us","title":"Get the geography of the 2020 contiguous United States — contiguous_us","text":"Get geography 2020 contiguous United States","code":""},{"path":"http://geomarker.io/appc/reference/contiguous_us.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the geography of the 2020 contiguous United States — contiguous_us","text":"","code":"contiguous_us()"},{"path":"http://geomarker.io/appc/reference/contiguous_us.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the geography of the 2020 contiguous United States — contiguous_us","text":"s2_geography object","code":""},{"path":"http://geomarker.io/appc/reference/contiguous_us.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the geography of the 2020 contiguous United States — contiguous_us","text":"","code":"if (FALSE) { contiguous_us() }"},{"path":"http://geomarker.io/appc/reference/get_census_tract_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get census tract identifier — get_census_tract_id","title":"Get census tract identifier — get_census_tract_id","text":"identifier closest census tract geography (retrieved US Census API) supplied year returned s2 geohash.","code":""},{"path":"http://geomarker.io/appc/reference/get_census_tract_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get census tract identifier — get_census_tract_id","text":"","code":"get_census_tract_id(x, year = as.character(2010:2023))"},{"path":"http://geomarker.io/appc/reference/get_census_tract_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get census tract identifier — get_census_tract_id","text":"x vector s2 cell identifers (s2_cell object) year character data year passed tigris get state tract boundaries","code":""},{"path":"http://geomarker.io/appc/reference/get_census_tract_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get census tract identifier — get_census_tract_id","text":"tigris::tracts() powers , set options(tigris_use_cache = TRUE) benefit caching. According https://github.com/walkerke/tigris, available years tracts states 1990, 2000, 2010 - 2022","code":""},{"path":"http://geomarker.io/appc/reference/get_census_tract_id.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get census tract identifier — get_census_tract_id","text":"https://www2.census.gov/geo/pdfs/reference/GARM/Ch10GARM.pdf","code":""},{"path":"http://geomarker.io/appc/reference/get_census_tract_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get census tract identifier — get_census_tract_id","text":"","code":"get_census_tract_id(s2::as_s2_cell(c(\"8841b399ced97c47\", \"8841b38578834123\")), year = \"2020\") #>   found 2 unique locations across 1 states #> 8841b399ced97c47 8841b38578834123  #>    \"39061003200\"    \"39061003000\""},{"path":"http://geomarker.io/appc/reference/get_closest_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the closest years to a vector of dates — get_closest_year","title":"Get the closest years to a vector of dates — get_closest_year","text":"Get closest years vector dates","code":""},{"path":"http://geomarker.io/appc/reference/get_closest_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the closest years to a vector of dates — get_closest_year","text":"","code":"get_closest_year(date, years)"},{"path":"http://geomarker.io/appc/reference/get_closest_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the closest years to a vector of dates — get_closest_year","text":"date vector date objects years vector characters (numerics) representing years choose ","code":""},{"path":"http://geomarker.io/appc/reference/get_closest_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the closest years to a vector of dates — get_closest_year","text":"character vector closest year years date date","code":""},{"path":"http://geomarker.io/appc/reference/get_closest_year.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the closest years to a vector of dates — get_closest_year","text":"find closest year, date converted year differences provided years minimzed. problem....","code":""},{"path":"http://geomarker.io/appc/reference/get_closest_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the closest years to a vector of dates — get_closest_year","text":"","code":"if (FALSE) { get_closest_year(as.Date(c(\"2021-09-15\", \"2022-09-01\")), years = c(2020, 2022)) }"},{"path":"http://geomarker.io/appc/reference/get_daily_aqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily AQS concentrations — get_daily_aqs","title":"Get daily AQS concentrations — get_daily_aqs","text":"Pre-generated daily summary files downloaded EPA AQS website filtered/harmonized described Details.","code":""},{"path":"http://geomarker.io/appc/reference/get_daily_aqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily AQS concentrations — get_daily_aqs","text":"","code":"get_daily_aqs(pollutant = c(\"pm25\", \"ozone\", \"no2\"), year = \"2021\")"},{"path":"http://geomarker.io/appc/reference/get_daily_aqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily AQS concentrations — get_daily_aqs","text":"pollutant one \"pm25\", \"ozone\", \"no2\" year calendar year","code":""},{"path":"http://geomarker.io/appc/reference/get_daily_aqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily AQS concentrations — get_daily_aqs","text":"data.frame/tibble pollutant concentrations site id, lat/lon, date","code":""},{"path":"http://geomarker.io/appc/reference/get_daily_aqs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get daily AQS concentrations — get_daily_aqs","text":"PM2.5 (FRM, non-FRM, speciation), data filtered observations sample duration \"24 HOURS\". pollutants measurements removed observation percent sampling period less 75. pollutant measured one device day s2 location, average measurement returned, ensuring unique measurements pollutant-location-day Note: Historical measurements subject change EPA AQS website stores latest versions.  Since function always downloads latest data EPA AQS, means different results depending date run. Get files page date last updated: readr::read_csv(\"https://aqs.epa.gov/aqsweb/airdata/file_list.csv\")","code":""},{"path":"http://geomarker.io/appc/reference/get_daily_aqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get daily AQS concentrations — get_daily_aqs","text":"","code":"if (FALSE) { get_daily_aqs(\"pm25\", \"2021\") }"},{"path":"http://geomarker.io/appc/reference/get_elevation_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get elevation summary data — get_elevation_summary","title":"Get elevation summary data — get_elevation_summary","text":"fun (e.g. median() sd()) elevations (captured spatial resolution 800 800 m) within buffer distance s2 geohash.","code":""},{"path":"http://geomarker.io/appc/reference/get_elevation_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get elevation summary data — get_elevation_summary","text":"","code":"get_elevation_summary(x, fun = stats::median, buffer = 800)  install_elevation_data()"},{"path":"http://geomarker.io/appc/reference/get_elevation_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get elevation summary data — get_elevation_summary","text":"x vector s2 cell identifers (s2_cell object) fun function summarize extracted data buffer distance s2 cell (meters) summarize data","code":""},{"path":"http://geomarker.io/appc/reference/get_elevation_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get elevation summary data — get_elevation_summary","text":"get_elevation_summary(), numeric vector elevation summaries, length x install_elevation_data(), character string path elevation raster","code":""},{"path":"http://geomarker.io/appc/reference/get_elevation_summary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get elevation summary data — get_elevation_summary","text":"https://prism.oregonstate.edu/normals/","code":""},{"path":"http://geomarker.io/appc/reference/get_elevation_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get elevation summary data — get_elevation_summary","text":"","code":"if (FALSE) { get_elevation_summary(s2::as_s2_cell(c(\"8841b399ced97c47\", \"8841b38578834123\"))) }"},{"path":"http://geomarker.io/appc/reference/get_merra_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MERRA-2 aerosol diagnostics data — get_merra_data","title":"Get MERRA-2 aerosol diagnostics data — get_merra_data","text":"Total component (Dust, OC, BC, SS, SO4) surface PM2.5 concentrations MERRA-2 M2T1NXAER v5.12.4 product.","code":""},{"path":"http://geomarker.io/appc/reference/get_merra_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MERRA-2 aerosol diagnostics data — get_merra_data","text":"","code":"get_merra_data(x, dates)  install_merra_data(merra_year = as.character(2016:2023))  create_daily_merra_data(merra_date)"},{"path":"http://geomarker.io/appc/reference/get_merra_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MERRA-2 aerosol diagnostics data — get_merra_data","text":"x vector s2 cell identifers (s2_cell object) dates list date vectors MERRA data, must length x merra_year character string year merra data merra_date date object date merra data","code":""},{"path":"http://geomarker.io/appc/reference/get_merra_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MERRA-2 aerosol diagnostics data — get_merra_data","text":"get_merra_data(), list tibbles length x, containing merra data columns (merra_dust, merra_oc, merra_bc, merra_ss, merra_so4, merra_pm25) one row per date dates install_merra_data(), character string path merra data create_daily_merra_data(), tibble columns s2, date, concentrations PM2.5 total, dust, oc, bc, ss, so4","code":""},{"path":"http://geomarker.io/appc/reference/get_merra_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get MERRA-2 aerosol diagnostics data — get_merra_data","text":"install data source, Earthdata account linked permissions GES DISC required. EARTHDATA_USERNAME EARTHDATA_PASSWORD must set. .env file present, environment variables loaded using dotenv package. Installed data filtered bounding box around contiguous US, averaged daily values, converted micrograms per cubic meter ($ug/m^3$). Total surface PM2.5 mass calculated according formula https://gmao.gsfc.nasa.gov/reanalysis/MERRA-2/FAQ/#Q4 Set proxy used httr calls merra functions httr::set_config(httr::use_proxy( ... )); e.g. httr::set_config(httr::use_proxy(\"http://bmiproxyp.chmcres.cchmc.org\", 80, Sys.getenv(\"CCHMC_USERNAME\"), Sys.getenv(\"CCHMC_PASSWORD\")))","code":""},{"path":"http://geomarker.io/appc/reference/get_merra_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get MERRA-2 aerosol diagnostics data — get_merra_data","text":"","code":"if (FALSE) { d <- list(   \"8841b39a7c46e25f\" = as.Date(c(\"2023-05-18\", \"2023-11-06\")),   \"8841a45555555555\" = as.Date(c(\"2023-06-22\", \"2023-08-15\")) ) get_merra_data(x = s2::as_s2_cell(names(d)), dates = d) }"},{"path":"http://geomarker.io/appc/reference/get_narr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily North American Regional Reanalysis (NARR) weather data — get_narr_data","title":"Get daily North American Regional Reanalysis (NARR) weather data — get_narr_data","text":"Get daily North American Regional Reanalysis (NARR) weather data Installs NARR raster data user's data directory appc package","code":""},{"path":"http://geomarker.io/appc/reference/get_narr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily North American Regional Reanalysis (NARR) weather data — get_narr_data","text":"","code":"get_narr_data(   x,   dates,   narr_var = c(\"air.2m\", \"hpbl\", \"acpcp\", \"rhum.2m\", \"vis\", \"pres.sfc\", \"uwnd.10m\",     \"vwnd.10m\") )  install_narr_data(   narr_var = c(\"air.2m\", \"hpbl\", \"acpcp\", \"rhum.2m\", \"vis\", \"pres.sfc\", \"uwnd.10m\",     \"vwnd.10m\"),   narr_year = as.character(2016:2023) )"},{"path":"http://geomarker.io/appc/reference/get_narr_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily North American Regional Reanalysis (NARR) weather data — get_narr_data","text":"x vector s2 cell identifers (s2_cell object) dates list date vectors NARR data, must length x narr_var character string name NARR variable narr_year character string year NARR data","code":""},{"path":"http://geomarker.io/appc/reference/get_narr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily North American Regional Reanalysis (NARR) weather data — get_narr_data","text":"get_narr_data(), list numeric vectors NARR values (length x dates) install_narr_data(), character string path NARR raster data","code":""},{"path":"http://geomarker.io/appc/reference/get_narr_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get daily North American Regional Reanalysis (NARR) weather data — get_narr_data","text":"NARR data comes 0.3 degrees gridded data, 32 sq km resolution. s2 geohashes intersected 0.3 degree grid matching daily weather values.","code":""},{"path":"http://geomarker.io/appc/reference/get_narr_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get daily North American Regional Reanalysis (NARR) weather data — get_narr_data","text":"https://psl.noaa.gov/data/gridded/data.narr.html https://www.ncei.noaa.gov/products/weather-climate-models/north-american-regional","code":""},{"path":"http://geomarker.io/appc/reference/get_nei_point_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NEI point summary data — get_nei_point_summary","title":"Get NEI point summary data — get_nei_point_summary","text":"National Emissions Inventory (NEI) data summarized sum point emissions within buffer distance s2 geohash weighted inverse distance squared emission point.","code":""},{"path":"http://geomarker.io/appc/reference/get_nei_point_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NEI point summary data — get_nei_point_summary","text":"","code":"get_nei_point_summary(   x,   year = c(\"2020\", \"2017\"),   pollutant_code = c(\"PM25-PRI\", \"EC\", \"OC\", \"SO4\", \"NO3\", \"PMFINE\"),   buffer = 1000 )  install_nei_point_data(year = c(\"2020\", \"2017\"))"},{"path":"http://geomarker.io/appc/reference/get_nei_point_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NEI point summary data — get_nei_point_summary","text":"x vector s2 cell identifers (s2_cell object) year character string year NEI data pollutant_code NEI pollutant summarize buffer distance s2 cell (meters) summarize data","code":""},{"path":"http://geomarker.io/appc/reference/get_nei_point_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NEI point summary data — get_nei_point_summary","text":"get_nei_point_summary(), numeric vector (length x) get_nei_point_data(), character string path NEI point data RDS file","code":""},{"path":"http://geomarker.io/appc/reference/get_nei_point_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get NEI point summary data — get_nei_point_summary","text":"NEI file downloaded, unzipped, filtered observations pollutant code EC, OC, SO4, NO3, PMFINE, PM25-PRI. Latitude longitude encoded s2 vector, column names cleaned, rows missing values (including total emissions emissions units) excluded.","code":""},{"path":"http://geomarker.io/appc/reference/get_nei_point_summary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get NEI point summary data — get_nei_point_summary","text":"https://www.epa.gov/air-emissions-inventories/national-emissions-inventory-nei https://www.epa.gov/air-emissions-inventories/2020-national-emissions-inventory-nei-technical-support-document-tsd","code":""},{"path":"http://geomarker.io/appc/reference/get_nei_point_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NEI point summary data — get_nei_point_summary","text":"","code":"get_nei_point_summary(s2::as_s2_cell(c(\"8841b399ced97c47\", \"8841b38578834123\")), year = \"2020\") #> [1] 6.302855e-05 1.770889e-05 get_nei_point_summary(s2::as_s2_cell(c(\"8841b399ced97c47\", \"8841b38578834123\")), year = \"2017\") #> [1] 6.140541e-05 1.894630e-05"},{"path":"http://geomarker.io/appc/reference/get_traffic_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get traffic summary — get_traffic_summary","title":"Get traffic summary — get_traffic_summary","text":"Highway Performance Monitoring System (HPMS) data 2020 summarized sum total (truck-) average annual daily vehicle-meter counts within buffer meters s2 geohash.","code":""},{"path":"http://geomarker.io/appc/reference/get_traffic_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get traffic summary — get_traffic_summary","text":"","code":"get_traffic_summary(x, buffer = 400)  install_traffic()"},{"path":"http://geomarker.io/appc/reference/get_traffic_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get traffic summary — get_traffic_summary","text":"x vector s2 cell identifers (s2_cell object) buffer distance s2 cell (meters) summarize data","code":""},{"path":"http://geomarker.io/appc/reference/get_traffic_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get traffic summary — get_traffic_summary","text":"list length x, element list total_aadt_m truck_aadt_m estimates","code":""},{"path":"http://geomarker.io/appc/reference/get_traffic_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get traffic summary — get_traffic_summary","text":"s2 level 14 approximation (~ 521 m sq) used simplify intersection calculation traffic summary data","code":""},{"path":"http://geomarker.io/appc/reference/get_traffic_summary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get traffic summary — get_traffic_summary","text":"https://www.fhwa.dot.gov/policyinformation/hpms.cfm https://data-usdot.opendata.arcgis.com/datasets/usdot::highway-performance-monitoring-system-hpms-2020/https://www.fhwa.dot.gov/policyinformation/hpms/fieldmanual/hpms_field_manual_dec2016.pdf","code":""},{"path":"http://geomarker.io/appc/reference/get_traffic_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get traffic summary — get_traffic_summary","text":"","code":"if (FALSE) { get_traffic_summary(s2::as_s2_cell(c(\"8841b399ced97c47\", \"8841b38578834123\")), buffer = 1500) }"},{"path":"http://geomarker.io/appc/reference/get_urban_imperviousness.html","id":null,"dir":"Reference","previous_headings":"","what":"Get average buffered urban imperviousness — get_urban_imperviousness","title":"Get average buffered urban imperviousness — get_urban_imperviousness","text":"percent urban imperviousness NLCD 30 x 30 m cell within buffer meters locations x averaged.","code":""},{"path":"http://geomarker.io/appc/reference/get_urban_imperviousness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get average buffered urban imperviousness — get_urban_imperviousness","text":"","code":"get_urban_imperviousness(x, year, buffer = 400)  install_urban_imperviousness(year = as.character(c(2021, 2019, 2016)))"},{"path":"http://geomarker.io/appc/reference/get_urban_imperviousness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get average buffered urban imperviousness — get_urban_imperviousness","text":"x vector s2 cell identifiers (s2_cell object) year character string year urban imperviousness data buffer distance s2 cell (meters) summarize data","code":""},{"path":"http://geomarker.io/appc/reference/get_urban_imperviousness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get average buffered urban imperviousness — get_urban_imperviousness","text":"get_urban_imperviousness(), numeric vector length x install_impervious(), character string path impervious raster data","code":""},{"path":"http://geomarker.io/appc/reference/get_urban_imperviousness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get average buffered urban imperviousness — get_urban_imperviousness","text":"Urban imperviousness data released sequentially, 2021 data retrieved 2023-06-30 release; 2019 2016 data retrieved 2021-06-04 release. metadata attribute definition percent imperviousness: \"file structure shows values range 0-255, values 0-100 real populated values, addition background value 127\". Extracted values greater 100 changed 0 averaging.","code":""},{"path":"http://geomarker.io/appc/reference/get_urban_imperviousness.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get average buffered urban imperviousness — get_urban_imperviousness","text":"https://www.mrlc.gov/data/type/urban-imperviousness https://www.mrlc.gov/viewer/ https://www.usgs.gov/centers/eros/science/national-land-cover-database","code":""},{"path":"http://geomarker.io/appc/reference/get_urban_imperviousness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get average buffered urban imperviousness — get_urban_imperviousness","text":"","code":"if (FALSE) { get_urban_imperviousness(   x = s2::as_s2_cell(c(\"8841b399ced97c47\", \"8841b38578834123\")),   year = \"2021\" ) }"},{"path":"http://geomarker.io/appc/reference/install_released_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download pre-installed data from GitHub release — install_released_data","title":"Download pre-installed data from GitHub release — install_released_data","text":"install_smoke_pm_data(), install_merra_data(), install_traffic(), install_nei_point_data()download geospatial data directly provider transform subset data smaller files used appcget_*_data()` functions. installation process can take long time, installed geomarker data (default) downloaded corresponding github release.","code":""},{"path":"http://geomarker.io/appc/reference/install_released_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download pre-installed data from GitHub release — install_released_data","text":"","code":"install_released_data(   released_data_name,   package_version = utils::packageVersion(\"appc\") )"},{"path":"http://geomarker.io/appc/reference/install_released_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download pre-installed data from GitHub release — install_released_data","text":"functions utilized automatically geomarker assessment functions, can called without input data install geomarker data ahead time, external internet access possible input data added. Note install functions require system installation gdal. turn default usage downloading pre-generated data instead install data geomarker data directly sources, set options(\"appc_install_data_from_source\"), environment variable APPC_INSTALL_DATA_FROM_SOURCE non-empty value.","code":""},{"path":"http://geomarker.io/appc/reference/install_smoke_pm_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Installs daily, census-tract level smoke pm data into user's data directory for the appc package — install_smoke_pm_data","title":"Installs daily, census-tract level smoke pm data into user's data directory for the appc package — install_smoke_pm_data","text":"See examples read installed RDS file. Merge data existing data date census_tract_id_2010 retrieve smoke_pm column. Note census tract-date combination implicitly missing value zero.","code":""},{"path":"http://geomarker.io/appc/reference/install_smoke_pm_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Installs daily, census-tract level smoke pm data into user's data directory for the appc package — install_smoke_pm_data","text":"","code":"install_smoke_pm_data()"},{"path":"http://geomarker.io/appc/reference/install_smoke_pm_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Installs daily, census-tract level smoke pm data into user's data directory for the appc package — install_smoke_pm_data","text":"path RDS file containing smoke data","code":""},{"path":"http://geomarker.io/appc/reference/install_smoke_pm_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Installs daily, census-tract level smoke pm data into user's data directory for the appc package — install_smoke_pm_data","text":"https://pubmed.ncbi.nlm.nih.gov/36134580/ https://github.com/echolab-stanford/daily-10km-smokePM","code":""},{"path":"http://geomarker.io/appc/reference/install_smoke_pm_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Installs daily, census-tract level smoke pm data into user's data directory for the appc package — install_smoke_pm_data","text":"","code":"if (FALSE) { readRDS(install_smoke_pm_data()) }"},{"path":"http://geomarker.io/appc/reference/install_source_preference.html","id":null,"dir":"Reference","previous_headings":"","what":"install_source_preference() — install_source_preference","title":"install_source_preference() — install_source_preference","text":"install_source_preference()","code":""},{"path":"http://geomarker.io/appc/reference/install_source_preference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"install_source_preference() — install_source_preference","text":"","code":"install_source_preference()"},{"path":"http://geomarker.io/appc/reference/predict_pm25.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily PM2.5 model predictions — predict_pm25","title":"Get daily PM2.5 model predictions — predict_pm25","text":"Get daily PM2.5 model predictions","code":""},{"path":"http://geomarker.io/appc/reference/predict_pm25.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily PM2.5 model predictions — predict_pm25","text":"","code":"predict_pm25(x, dates)"},{"path":"http://geomarker.io/appc/reference/predict_pm25.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily PM2.5 model predictions — predict_pm25","text":"x vector s2 cell identifers (s2_cell object) dates list date vectors predictions, must length x","code":""},{"path":"http://geomarker.io/appc/reference/predict_pm25.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily PM2.5 model predictions — predict_pm25","text":"list tibbles length x, containing columns predicted (pm25) standard error (pm25_se) one row per date dates","code":""},{"path":"http://geomarker.io/appc/reference/predict_pm25.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get daily PM2.5 model predictions — predict_pm25","text":"","code":"d <- list(   \"8841b39a7c46e25f\" = as.Date(c(\"2023-05-18\", \"2023-11-06\")),   \"8841a45555555555\" = as.Date(c(\"2023-06-22\", \"2023-08-15\")) ) predict_pm25(x = s2::as_s2_cell(names(d)), dates = d) #> loading random forest model... #> adding coordinates... #> adding elevation... #> adding AADT... #> intersecting with AADT data using level 14 s2 approximation ( ~ 521 sq m) #> adding NARR... #> downloading 2023 air.2m: #> downloading 2023 hpbl: #> downloading 2023 acpcp: #> downloading 2023 rhum.2m: #> downloading 2023 vis: #> downloading 2023 pres.sfc: #> downloading 2023 uwnd.10m: #> downloading 2023 vwnd.10m: #> adding MERRA... #> adding NLCD urban imperviousness... #> adding NEI... #> adding smoke via census tract... #>   found 2 unique locations across 2 states #> (down)loading 2010 tracts ■■■■■■■■■■■■■■■■                  50% |  ETA:  3s #> adding time components... #> $`8841b39a7c46e25f` #> # A tibble: 2 × 2 #>    pm25 pm25_se #>   <dbl>   <dbl> #> 1  8.40   0.548 #> 2  9.90   1.52  #>  #> $`8841a45555555555` #> # A tibble: 2 × 2 #>    pm25 pm25_se #>   <dbl>   <dbl> #> 1  5.29   0.541 #> 2  6.98   1.16  #>"},{"path":"http://geomarker.io/appc/reference/s2_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Get states geographic boundaries — s2_states","title":"Get states geographic boundaries — s2_states","text":"Get states geographic boundaries","code":""},{"path":"http://geomarker.io/appc/reference/s2_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get states geographic boundaries — s2_states","text":"","code":"s2_states(year = as.character(2010:2023))"},{"path":"http://geomarker.io/appc/reference/s2_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get states geographic boundaries — s2_states","text":"year character data year passed tigris get tract boundaries","code":""},{"path":"http://geomarker.io/appc/reference/s2_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get states geographic boundaries — s2_states","text":"","code":"s2_states(year = \"2020\") #> # A tibble: 56 × 2 #>    GEOID s2_geography                                                            #>    <chr> <s2_geography>                                                          #>  1 54    POLYGON ((-81.747773 39.094758, -81.749332 39.092898, -81.749853 39.09… #>  2 12    MULTIPOLYGON (((-86.39285 30.226, -86.39058 30.22575, -86.38852 30.225… #>  3 17    POLYGON ((-91.18698 40.637297, -91.192558 40.636508, -91.195505 40.636… #>  4 27    POLYGON ((-96.784489 46.630486, -96.78468 46.630435, -96.784723 46.630… #>  5 24    POLYGON ((-77.458838 39.220219, -77.458887 39.220155, -77.458898 39.22… #>  6 44    MULTIPOLYGON (((-71.789704 41.72508, -71.789703 41.724563, -71.789675 … #>  7 16    POLYGON ((-116.899726 44.840584, -116.89975 44.840546, -116.899772 44.… #>  8 33    POLYGON ((-72.330509 43.600092, -72.331425 43.599962, -72.331776 43.59… #>  9 37    POLYGON ((-82.416911 36.072577, -82.416999 36.072446, -82.418141 36.07… #> 10 50    POLYGON ((-73.314547 44.26149, -73.316427 44.257737, -73.319603 44.249… #> # ℹ 46 more rows"},{"path":"http://geomarker.io/appc/reference/s2_tracts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get census tract geographic boundaries — s2_tracts","title":"Get census tract geographic boundaries — s2_tracts","text":"Get census tract geographic boundaries","code":""},{"path":"http://geomarker.io/appc/reference/s2_tracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get census tract geographic boundaries — s2_tracts","text":"","code":"s2_tracts(state, year = as.character(2010:2023))"},{"path":"http://geomarker.io/appc/reference/s2_tracts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get census tract geographic boundaries — s2_tracts","text":"state character string state number abbreviation year character data year passed tigris get tract boundaries","code":""},{"path":"http://geomarker.io/appc/reference/s2_tracts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get census tract geographic boundaries — s2_tracts","text":"tibble tracts s2_geography column","code":""},{"path":"http://geomarker.io/appc/reference/s2_tracts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get census tract geographic boundaries — s2_tracts","text":"","code":"s2_tracts(\"OH\", \"2023\") #> # A tibble: 3,168 × 14 #>    STATEFP COUNTYFP TRACTCE GEOID   GEOIDFQ NAME  NAMELSAD MTFCC FUNCSTAT  ALAND #>    <chr>   <chr>    <chr>   <chr>   <chr>   <chr> <chr>    <chr> <chr>     <dbl> #>  1 39      025      041105  390250… 140000… 411.… Census … G5020 S        7.75e6 #>  2 39      025      041001  390250… 140000… 410.… Census … G5020 S        4.22e7 #>  3 39      025      042002  390250… 140000… 420.… Census … G5020 S        9.97e7 #>  4 39      025      042001  390250… 140000… 420.… Census … G5020 S        9.46e7 #>  5 39      025      041104  390250… 140000… 411.… Census … G5020 S        3.88e6 #>  6 39      025      040704  390250… 140000… 407.… Census … G5020 S        4.11e6 #>  7 39      025      040206  390250… 140000… 402.… Census … G5020 S        2.36e7 #>  8 39      025      040703  390250… 140000… 407.… Census … G5020 S        3.96e6 #>  9 39      025      041506  390250… 140000… 415.… Census … G5020 S        3.27e7 #> 10 39      025      040205  390250… 140000… 402.… Census … G5020 S        3.08e6 #> # ℹ 3,158 more rows #> # ℹ 4 more variables: AWATER <dbl>, INTPTLAT <chr>, INTPTLON <chr>, #> #   s2_geography <s2_geography>"}]
